{
    "bco_id": "Some UUID", <- possibly UUID from galaxy workflow
    "bco_spec_version": "https://w3id.org/biocompute/1.3.0/",
    "checksum": "03f712657c283ee4294fda20a1c68515aa5fcd78299477048c3a9eec474ffcd4",
    "provenance_domain": {
        "name": "BCO Name", <- name
        "version": "v1.0", <- version. needs to be converted from int to string
        "review": [
          {
              "status": "approved",
              "reviewer_comment": "Approved by staff.",
              "date": "2017-11-12T12:30:48-0400",
              "reviewer": {
                  "name": "John Doe",
                  "affiliation": "State University",
                  "email": "john.doe@gmail.com",
                  "contribution": [
                      "curatedBy"
                  ]
              }
          }
        ],
        "created": "",
        "modified": "",
        "contributors": [
            {
                "name": "Deloitte Team",
                "affiliation": "Deloitte Consulting LLP",
                "email": "",
                "contribution": [
                    "authoredBy"
                ]
            }
        ],
        "license": "https://spdx.org/licenses/CC-BY-4.0.html"
    },
    "usability_domain": ["ChIP Sequence Analysis based on [pubmed:28867293]"],
    "description_domain": {
        "keywords": [ <- tags
            "ChIP",
            "Sequencing"
        ],
        "xref": [
            {
                "namespace": "pubmed",
                "name": "PubMed",
                "ids": [
                    "28867293"
                ],
                "access_time": ""
            }
        ],
        "platform": [
            "Linux" <- Galaxy
        ],
        "pipeline_steps": [     <- workflows   ---- what should we do about post_job_actions? hmm..
            {
                "step_number": 1, <- key value (int needs to be converted) for steps (need to pull this up a level)
                "name": "Trimmomatic",  <- name
                "description": "Trim base to a quality score of >=20", <- label
                "version": "0.36", <- tool version
                "input_list": [ <- inputs ... tricky here - uses output from previous steps usually
                    {
                    "uri": "http://hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/hg19.fa.gz"
                    }
                ],
                "output_list": [ <-output or workflow_outputs if outputs empty
                    {
                        "uri": "http://hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/hg19.fa.gz"
                    }
                ]
            },
            {
                "step_number": 2,
                "name": "FastQC",
                "description": "Output sequencing quality control files",
                "version": "0.11.8",
                "input_list": [
                    {
                        "uri": "http://hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/hg19.fa.gz"
                    }
                ],
                "output_list": [
                    {
                        "uri": "http://hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/hg19.fa.gz"
                    }
                ]
            },
            {
                "step_number": 3,
                "name": "Bowtie2",
                "description": "Read alignment to hg19",
                "version": "2.2.5",
                "prerequisite": [ < - i don't think there are inputs for galaxy workflows?
                {
                    "name": "HG19 reference file",
                    "uri": {
                        "uri": "http://hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/hg19.fa.gz"
                      }
                }
                ],
                "input_list": [
                    {
                        "uri": "http://hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/hg19.fa.gz"
                    }
                ],
                "output_list": [
                    {
                        "uri": "http://hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/hg19.fa.gz"
                    }
                ]
            },
            {
                "step_number": 4,
                "name": "MACS",
                "description": "Detect significant ChIP-seq peaks",
                "version": "2.1.1.20160309",
                "input_list": [
                    {
                        "uri": "http://hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/hg19.fa.gz"
                    }
                ],
                "output_list": [
                    {
                        "uri": "http://hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/hg19.fa.gz"                        
                    }
                ]
            }
        ]
    },
    "execution_domain": {
        "script": [ <- use workflow name with .ga on the end
            {
                "uri": {
                    "uri": "file://localhost/ChIP.py"
                }
            }
        ],
        "script_driver": "Python", <- put this as galaxy
        "software_prerequisites": [ <- could try to pull these from tools used in the galaxy workflow, or easier to just use galaxy version?
            {
                "name": "Trimmomatic", tool_shed_repository > name
                "version": "0.36", <- tool_version
                "uri": {
                    "uri": "http://example.com/dna.cgi?cmd=dna-hexagon&cmdMode=-" <-tool_id
                }
              },
            {
                "name": "FastQC",
                "version": "0.11.8",
                "uri": {
                    "uri": "ftp://user:password@host:port/path"
                }
            },
            {
                "name": "Bowtie2",
                "version": "2.2.5",
                "uri": {
                    "uri": "ftp://user:password@host:port/path"
                }
            },
            {
                "name": "MACS",
                "version": "2.1.1.20160309",
                "uri": {
                    "uri": "ftp://user:password@host:port/path"
                }
            }
        ],
        "external_data_endpoints": [ <- probably going to have to ask for this
            {
                "name": "BCOReSeqTB",
                "url": "https://github.com/CPTR-ReSeqTB/UVP/"
            }
        ],
        "environment_variables": {
            "CORE": "8"
        }
    },
    "parametric_domain": [ <- would need to manually ask for these...I think
      {"param": "name1", "value": "value", "step": "1"},
      {"param": "name2", "value": "value", "step": "1"}
    ],
    "io_domain": {
        "input_subdomain": [ <- can take the first input I think from workflow
            {
                "uri": {
                    "filename": "HG19 reference Genome", < - don't think having a filename is allowed?
                    "uri": "http://hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/hg19.fa.gz" 
                }
            }
        ],
        "output_subdomain": [ <- can maybe take the last output from workflow?
            {
                "mediatype": "text",
                "uri": {
                    "uri": "ftp://user:password@host:port/path"
                }
            }
        ]
    },
    "error_domain": { <- going to have to ask for this
        "empirical_error": {
          "comment": "false discovery rate cutoff q <0.05"
        },
        "algorithmic_error": [
          {
            "log_filename": "output.log"
          }
      ]
    }
}
